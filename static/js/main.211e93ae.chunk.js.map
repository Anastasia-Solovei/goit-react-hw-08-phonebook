{"version":3,"sources":["components/Navigation/Navigation.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactItem.module.css","views/Views.module.css","components/AppBar/AppBar.module.css","components/ContactList/ContactList.module.css","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/store.js","components/Navigation/Navigation.js","components/AppBar/AppBar.js","views/HomeView.js","views/LogInView.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","views/PhoneBookView.js","views/SignUpView.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","console","log","register","createAsyncThunk","credentials","a","post","data","authSlice","createSlice","name","initialState","user","email","password","token","isLoggedIn","extraReducers","authOperations","fulfilled","state","action","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Navigation","exact","to","className","s","NavLink","activeClassName","activeNavLink","href","AppBar","HomeView","HomeViewHeader","LogInView","Container","FormHeader","FormInput","type","pattern","title","required","ContactForm","useState","setName","number","setNumber","nameInputId","uuidv4","numberInputId","contacts","useSelector","contactsSelectors","getContacts","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","uniqueContact","allContasts","newName","isExistContact","find","contact","alert","checkUniqueContact","contactsOperations","addContact","id","InputOverlay","InputLabel","htmlFor","Input","onChange","FormButton","Filter","filterInputId","filterValue","getFilter","FilterOverlay","FilterLabel","FilterInput","contactsActions","changeFilter","ContactItem","onDeleteContact","ContactItemText","DeleteBtn","onClick","ContactList","deleteContact","useEffect","fetchContacts","filteredContacts","getFilteredContacts","length","map","PhoneBookView","PhoneBookHeader","SignUpView","setEmail","setPassword","preventdefault","App","path","component","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.211e93ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"Navigation_NavLink__3BVzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__P0KBu\",\"InputOverlay\":\"ContactForm_InputOverlay__1PfHe\",\"InputLabel\":\"ContactForm_InputLabel__26czB\",\"Input\":\"ContactForm_Input__iHWmU\",\"FormButton\":\"ContactForm_FormButton__2sk_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterOverlay\":\"Filter_FilterOverlay__1RTDA\",\"FilterLabel\":\"Filter_FilterLabel__2mLVZ\",\"FilterInput\":\"Filter_FilterInput__1NA3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__19COS\",\"ContactItemText\":\"ContactItem_ContactItemText__2lh9_\",\"DeleteBtn\":\"ContactItem_DeleteBtn__K_2ia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Views_Container__3AMF_\",\"FormInput\":\"Views_FormInput__1Eq6a\",\"PhoneBookHeader\":\"Views_PhoneBookHeader__1gLmK\",\"HomeViewHeader\":\"Views_HomeViewHeader__3wARW\",\"FormHeader\":\"Views_FormHeader__1zKVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__1guT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1sk8S\"};","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nconsole.log(axios.defaults);\r\n\r\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", credentials);\r\n    return data;\r\n    //token.set(data.token);\r\n  } catch (error) {}\r\n});\r\n\r\nexport default { register };\r\n\r\n// const login = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n//   try {\r\n//     const { data } = await axios.post(\"/users/login\", credentials);\r\n//     //token.set(data.token);\r\n//   } catch {}\r\n// });\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from \"./auth-operations\";\r\n\r\nconst initialState = {\r\n  user: {\r\n    name: null,\r\n    email: null,\r\n    password: null,\r\n  },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      // state.user = action.payload.user;\r\n      // state.token = action.payload.token;\r\n      // state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import logger from \"redux-logger\";\r\n//import contactsReducer from \"./contacts/contacts-reducer\";\r\nimport authReducer from \"./auth/auth-slice\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    // contacts: contactsReducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport persistReducer from \"redux-persist/lib/persistReducer\";\r\n\r\nimport s from \"./Navigation.module.css\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={s.NavLink}\r\n        activeClassName={s.activeNavLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={s.NavLink}\r\n        activeClassName={s.activeNavLink}\r\n      >\r\n        Sign Up\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={s.NavLink}\r\n        activeClassName={s.activeNavLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        className={s.NavLink}\r\n        activeClassName={s.activeNavLink}\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n      <a href=\"/\" className={s.NavLink}>\r\n        UserMenu\r\n      </a>\r\n      {/* <a href=\"/\" className={s.NavLink}></a> */}\r\n      {/* <a href=\"/\" className={s.NavLink}>\r\n        Sign Up\r\n      </a> */}\r\n      {/* <a href=\"/\" className={s.NavLink}>\r\n        Log In\r\n      </a> */}\r\n      {/* <a href=\"/\" className={s.NavLink}>\r\n        Phonebook\r\n      </a> */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport s from \"./AppBar.module.css\";\r\n\r\nexport default function AppBar() {\r\n  return (\r\n    <header className={s.AppBar}>\r\n      <Navigation />\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport s from \"./Views.module.css\";\r\n\r\nexport default function HomeView() {\r\n  return (\r\n    <div>\r\n      <h2 className={s.HomeViewHeader}>Welcome to the PhoneBook Service!</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Views.module.css\";\r\n\r\nexport default function LogInView() {\r\n  return (\r\n    <div className={s.Container}>\r\n      <h2 className={s.FormHeader}>Log In page</h2>\r\n      <form\r\n      //</div>onSubmit={handleSubmit}\r\n      >\r\n        <label className={s.FormInput}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            //value={email}\r\n            //onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.FormInput}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            //value={password}\r\n            //onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkUniqueContact = (allContasts, newName) => {\n    const isExistContact = !!allContasts.find(\n      (contact) => contact.name === newName\n    );\n\n    isExistContact && alert(\"Contact is already exist!\");\n\n    return !isExistContact;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const uniqueContact = checkUniqueContact(contacts, name);\n    if (!uniqueContact) {\n      return;\n    }\n\n    uniqueContact &&\n      dispatch(\n        contactsOperations.addContact({\n          id: uuidv4(),\n          name: name,\n          number: number,\n        })\n      );\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.ContactForm} onSubmit={handleSubmit}>\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={s.Input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          id={nameInputId}\n          required\n        />\n      </div>\n\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={s.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          id={numberInputId}\n          required\n        />\n      </div>\n\n      <button className={s.FormButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n  checkUniqueContact: PropTypes.func,\n};\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { contactsActions, contactsSelectors } from \"redux/contacts\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const filterInputId = uuidv4();\r\n\r\n  const filterValue = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChangeFilter = (e) =>\r\n    dispatch(contactsActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <div className={s.FilterOverlay}>\r\n      <label htmlFor={filterInputId} className={s.FilterLabel}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.FilterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={onChangeFilter}\r\n        id={filterInputId}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={s.ContactItem}>\n      <p className={s.ContactItemText}>\n        {name}: {number}\n      </p>\n\n      <button\n        className={s.DeleteBtn}\n        id={id}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\nimport ContactItem from \"./ContactItem\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) =>\n    dispatch(contactsOperations.deleteContact(id));\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n\n  if (filteredContacts.length === 0) return null;\n\n  return (\n    <ul className={s.ContactList}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func,\n};\n","import React from \"react\";\r\n\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport Filter from \"../components/Filter\";\r\nimport ContactList from \"../components/ContactList\";\r\n\r\nimport s from \"./Views.module.css\";\r\nexport default function PhoneBookView() {\r\n  return (\r\n    <>\r\n      <h2 className={s.PhoneBookHeader}>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2 className={s.PhoneBookHeader}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n\r\nimport s from \"./Views.module.css\";\r\n\r\nexport default function SignUpView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n\r\n      case \"email\":\r\n        return setEmail(value);\r\n\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventdefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.Container}>\r\n      <h2 className={s.FormHeader}>Registration page</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={s.FormInput}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            //pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            //title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            //required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.FormInput}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            // pattern=\"[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*\"\r\n            //title=\"Email может состоять из букв, тире, цифр и не может содержать пробелы\"\r\n            //required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.FormInput}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            //pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            //title=\"Пароль может состоять из букв, тире, цифр и не может содержать пробелы\"\r\n            // required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\n\r\nimport AppBar from \"./components/AppBar\";\r\nimport HomeView from \"./views/HomeView\";\r\nimport LogInView from \"./views/LogInView\";\r\nimport PhoneBookView from \"./views/PhoneBookView\";\r\nimport SignUpView from \"./views/SignUpView\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <AppBar />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomeView} />\r\n        <Route path=\"/register\" component={SignUpView} />\r\n        <Route path=\"/login\" component={LogInView} />\r\n        <Route path=\"/contacts\" component={PhoneBookView} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}